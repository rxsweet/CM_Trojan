#加密方式：https://github.com/byJoey/cfnew/blob/main/.github/workflows/obfuscate.yml
name: byJoey Obfuscate easy现用


on:
  push:
    paths:
      - '_worker_src_byjoey_easy.js'
  workflow_dispatch:
  #schedule:
    #- cron: '0 * * * *'

jobs:
  build-and-obfuscate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Obfuscator
        run: npm install javascript-obfuscator

      - name: Obfuscate from local source file
        run: |
          node -e "
            const JavaScriptObfuscator = require('javascript-obfuscator');
            const fs = require('fs');
            const path = require('path');
            
            const sourceFileName = '_worker_src_byjoey_easy.js';
            const outputFileName = '_worker_src_byjoey_easy_Ob.js';
            const sourceFilePath = path.join(process.cwd(), sourceFileName);

            if (!fs.existsSync(sourceFilePath)) {
              console.error('错误：在路径 \'' + sourceFilePath + '\' 未找到源文件。请确保您的仓库根目录有名为 \'' + sourceFileName + '\' 的文件。');
              process.exit(1);
            }

            const originalCode = fs.readFileSync(sourceFilePath, 'utf8');

            if (!originalCode || originalCode.trim().length === 0) {
              console.error('错误：源文件 ' + sourceFileName + ' 为空。');
              process.exit(1);
            }

            // --- 这是一个简单自用的混淆配置 ---
            const obfuscationOptions = {
                compact: true,                // 压缩代码,一行显示
                stringArray: true,            // 启用字符串数组
                stringArrayEncoding: ['base64'], // 将字符串数组用 base64 编码
                stringArrayThreshold: 0.8,    // 80% 的字符串都会被加密
                identifierNamesGenerator: 'mangled', // 变量名改成 a,b,...
                renameGlobals: true,// 全局重命名
                numbersToExpressions: true,//启用将数字转换为表达式的功能,const foo = 1234;// output   const foo=-0xd93+-0x10b4+0x41*0x67+0x84e*0x3+-0xff8
                splitStrings: true,//切割字符串功能
                transformObjectKeys: true,//启用对象键的转换。对字典里面的值进行加密
                // --- 以下所有复杂选项均被禁用 ---
                controlFlowFlattening: false,// 控制流扁平化：对源代码进行结构转换，但会降低程序的可读性。warning: 此选项会显著影响性能，运行时速度最多可降低 1.5 倍
                deadCodeInjection: false,//warning: 此选项会显著增加混淆代码的大小（最高可达 200%），仅当混淆代码的大小无关紧要时才使用,warning: 此选项强制启用 `stringArray` 
                selfDefending: false,//warning:此项代码混淆后，请勿以任何方式更改混淆后的代码,任何更改（JavaScript美化工具）都可能导致代码无法正常运行,warning: 此项将 `compact`强制`true`
                debugProtection: false//启用此项:几乎无法使用开发者工具的调试功能。warning: 如果打开开发者工具，可能会导致浏览器卡死。
            const obfuscatedCode = JavaScriptObfuscator.obfuscate(originalCode, obfuscationOptions).getObfuscatedCode();
            
            fs.writeFileSync(path.join(process.cwd(), outputFileName), obfuscatedCode, 'utf8');
            console.log('成功将 \'' + sourceFileName + '\' 混淆并保存至 \'' + outputFileName + '\'。');
          "

      - name: Commit and push the obfuscated file
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add '_worker_src_byjoey_easy_Ob.js'
          if git diff --staged --quiet; then
            echo "No changes to commit, the obfuscated file is already up-to-date."
          else
            git commit -m "build: Generate and obfuscate worker script"
            git push
          fi
